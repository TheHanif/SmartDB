{"name":"Smartdb","tagline":"The most complete database class ever","body":"SmartDB\r\n=======\r\n- Smart Database Class that proccess most posible PDO Queries in smart way.\r\n- This class provides various methods to handle query as eazy as posible.\r\n- Class contains CRUD method includind various JOIN functionalities\r\n- Class also provides column and fiels selection mehods\r\n- You can also find biding methors for custom queries or special JOINs.\r\n- A extra _date method is available for customizing dates or get current date customized.\r\n\r\n\r\n##Tutorial\r\n\r\n###SETUP\r\n- Add this code at top of your php applications or use a seperate file for setup\r\n```PHP\r\n<?php \r\n// SETUP for smartDB\r\ndefine('DB_HOST', 'localhost');\t\t\t// Hostname of database\r\ndefine('DB_NAME', 'sampleDB');\t\t\t// Name of database\r\ndefine('DB_USER', 'root');\t\t\t\t// Username of database\r\ndefine('DB_PASSWORD', 'root');\t\t\t// User password of database\r\n\r\n// Including class\r\nrequire_once 'class.SmartDB.php';\r\n```\r\n\r\n###INSERT\r\n```PHP\r\n$db = new SmartDB;\r\n\r\n// Insert single row\r\n// Prepare columns and values\r\n$data = array();\r\n$data['column1'] = 'mix value 1';\r\n$data['column2'] = 'mix value 2';\r\n\r\n// Insert into dummy_table\r\n$db->insert('dummy_table', $data);\r\n```\r\n\r\n###SELECT\r\n```PHP\r\n$db = new SmartDB;\r\n\r\n// SELECT * FROM dummy_table\r\n$num_rows = 10; // Optional\r\n$db->get('dummy_table', $num_rows);\r\n```\r\n\r\n###DELETE\r\n```PHP\r\n$db = new SmartDB;\r\n\r\n// SELECT FROM dummy_table limit 10\r\n$num_rows = 10; // Optional\r\n$db->delete('dummy_table', $num_rows);\r\n```\r\n\r\n###UPDATE\r\n```PHP\r\n$db = new SmartDB;\r\n\r\n// update\r\n// Prepare columns and values\r\n$data = array();\r\n$data['column1'] = 'new mix value 1';\r\n$data['column2'] = 'new mix value 2';\r\n\r\n// Insert into dummy_table\r\n$db->update('dummy_table', $data);\r\n```\r\n\r\n###RESULT - ALL RESULTS - LOOP\r\n- Assign single row to $result\r\n```PHP\r\n$result = $db->result();\r\nprint_r($result);\r\n```\r\n- Assign all rows to $results\r\n```PHP\r\n$results = $db->all_results();\r\nprint_r($results);\r\n```\r\n- Loop through row\r\n```PHP\r\nwhile($result = $db->result()){\r\n\r\n\tprint_r($result);\r\n\techo '<br>';\r\n}\r\n```\r\n\r\n###ROW COUNT - Effected rows\r\n- Display the total counts after GET or effect rows count after DELETE or UPDATE\r\n```PHP\r\necho $db->row_count();\r\n```\r\n\r\n###LAST INSERT ID\r\n- Returns the ID of the last inserted row or sequence value\r\n```PHP\r\necho $db->last_id();\r\n```\r\n\r\n###SELECT COLUMNS\r\n```PHP\r\n// SELECT id FROM dummy_table\r\n$columns = array();\r\n$columns[] = 'id';\r\n\r\n$db->select($columns);\r\n$num_rows = 10; // Optional\r\n$db->get('dummy_table', $num_rows);\r\n```\r\n\r\n###Using WHERE\r\n- @param = column name\r\n- @param = value\r\n- @pram = condition\r\n```PHP\r\n$db->where('id', 2, '=');\r\n$db->get('dummy_table') or $db->delete('dummy_table');\r\n```\r\n\r\n###CUSTOM QUERY\r\n\r\n###BIND\r\n\r\n###JOIN\r\n\r\n###_DATE\r\n\r\n##Licensing\r\nFree for personal use only, If you want to use this class for commercial please contact me\r\n\r\n##Help & Feedback\r\nHave you made something cool with SmartDB? Let me know on thehanif@msn.com\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}